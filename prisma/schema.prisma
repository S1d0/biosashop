generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProductFamily {
  id          String           @id @default(uuid()) @db.Uuid
  name        String
  category    String
  description String
  image       String
  slug        String           @unique(map: "product_family_idx")
  createdAt   DateTime         @default(now()) @db.Timestamp(6)
  variants    ProductVariant[]
}

model ProductVariant {
  id          String        @id @default(uuid()) @db.Uuid
  familyId    String        @db.Uuid
  family      ProductFamily @relation(fields: [familyId], references: [id], onDelete: Cascade)
  name        String
  features    String[]
  description String
  images      String[]
  price       Int           @default(0)
  sku         String        @unique
  slug        String        @unique(map: "product_variant_idx")
  stock       Int           @default(0)
  size        String
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  cldImage    String        @default("")

  @@index([familyId])
}

model CustomerEnquiry {
  id        String        @id @default(uuid()) @db.Uuid
  name      String
  email     String
  phone     String? // Optional field
  message   String        @db.Text // Using Text type for longer messages
  status    EnquiryStatus @default(PENDING)
  createdAt DateTime      @default(now()) @db.Timestamp(6)
  updatedAt DateTime      @updatedAt

  @@index([email])
  @@index([status])
  @@index([createdAt])
}

enum EnquiryStatus {
  PENDING
  IN_PROGRESS
  RESPONDED
  RESOLVED
  SPAM
}

model Cart {
  id            String   @id @default(uuid()) @db.Uuid
  userId        String?
  sessionCartId String
  items         Json[]   @default([]) @db.Json
  itemsPrice    Int
  totalPrice    Int
  shippingPrice Int
  createdAt     DateTime @default(now()) @db.Timestamp(6)

  @@index([userId])
  @@index([sessionCartId])
}

model Order {
  id              String   @id @default(uuid()) @db.Uuid
  status          String   @default("pending") // pending, paid, shipped, delivered, cancelled
  userId          String?  @db.Uuid
  shippingAddress Json?    @db.Json
  items           Json     @db.Json // Array of OrderItem objects
  totalPrice      Int
  deliveryInfo    Json?    @db.Json // DeliveryInfo object
  paymentInfo     Json?    @db.Json // PaymentInfo object
  createdAt       DateTime @default(now()) @db.Timestamp(6)
  updatedAt       DateTime @updatedAt @db.Timestamp(6)

  @@index([userId])
  @@index([status])
  @@index([createdAt])
}
